{"version":3,"file":"static/js/553.de164de3.chunk.js","mappings":"8KAGA,MAAMA,EAAUC,uBAYHC,EAAQC,UACnB,MAAMC,QAAiBC,EAAAA,EAAMC,KAAK,GAADC,OAAIP,EAAO,UAAUQ,GAItD,OAHIJ,EAASK,KAAKC,OAChBC,eAAeC,QAAQ,OAAQC,KAAKC,UAAUV,EAASK,OAElDL,EAASK,M,sBCdH,SAASM,IACtB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAChCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,IAG7BO,GAAWC,EAAAA,EAAAA,MAmBjB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4EAA2EC,UACxFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qGAAoGC,SAAA,EACjHF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mDAAkDC,SAAC,sBACjEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yCAAwCC,SAAC,sBACvDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iCAAgCC,SAAC,wCAE9CC,EAAAA,EAAAA,MAAA,QAAMC,SAxBK5B,UACf6B,EAAEC,iBACET,EAAS,IAEb,IACE,MAAMU,QAAaC,EAAkB,CAAEnB,QAAOG,aAC9CiB,QAAQC,IAAI,kBAAmBH,GAE/BT,EAAS,aACX,CAAE,MAAOa,GAAM,IAADC,EAAAC,EAAAC,EACZL,QAAQb,OAAkB,QAAZgB,EAAAD,EAAIlC,gBAAQ,IAAAmC,OAAA,EAAZA,EAAc9B,OAAQ6B,EAAII,SACxClB,GAAqB,QAAZgB,EAAAF,EAAIlC,gBAAQ,IAAAoC,GAAM,QAANC,EAAZD,EAAc/B,YAAI,IAAAgC,OAAN,EAAZA,EAAoBC,UAAW,kCAC1C,CAAC,QACCpB,GAAW,EACb,GAU8BM,UAAU,YAAWC,SAAA,EAC7CF,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CACTC,MAAM,aACNC,KAAK,QACLC,KAAK,QACLC,MAAO/B,EACPgC,SAAWhB,GAAMf,EAASe,EAAEiB,OAAOF,OACnCG,YAAY,mBACZtB,UAAU,8EAEZD,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CACTC,MAAM,WACNC,KAAK,WACLC,KAAK,WACLC,MAAO5B,EACP6B,SAAWhB,GAAMZ,EAAYY,EAAEiB,OAAOF,OACtCG,YAAY,WACZtB,UAAU,6EAIbL,IACCI,EAAAA,EAAAA,KAAA,KAAGC,UAAU,oCAAmCC,SAAEN,KAIlDI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,UAC/BF,EAAAA,EAAAA,KAAA,KAAGwB,KAAK,wBAAwBvB,UAAU,wCAAuCC,SAAC,wBAKpFF,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CACLN,KAAK,SACLO,SAAUhC,EACVO,UAAU,qHAAoHC,SAE7HR,EAAU,gBAAkB,YAG/BS,EAAAA,EAAAA,MAAA,KAAGF,UAAU,iCAAgCC,SAAA,CAAC,uBACvB,KACrBF,EAAAA,EAAAA,KAAA,KAAGwB,KAAK,iBAAiBvB,UAAU,0BAAyBC,SAAC,uBAQzE,C","sources":["modules/auth/service/authService.js","modules/auth/components/Login.jsx"],"sourcesContent":["// auth/service/authService.js\nimport axios from \"axios\";\n\nconst API_URL = process.env.REACT_APP_API_BASE_URL;\n\n// Register new user\nexport const register = async (userData) => {\n  const response = await axios.post(`${API_URL}/register`, userData);\n  if (response.data.token) {\n    sessionStorage.setItem(\"user\", JSON.stringify(response.data));\n  }\n  return response.data;\n};\n\n// Login user\nexport const login = async (userData) => {\n  const response = await axios.post(`${API_URL}/login`, userData);\n  if (response.data.token) {\n    sessionStorage.setItem(\"user\", JSON.stringify(response.data));\n  }\n  return response.data;\n};\n\n\n// Logout user\nexport const logout = () => {\n  sessionStorage.removeItem(\"user\");\n};\n\n\nexport const authHeader = () => {\n  const user = JSON.parse(sessionStorage.getItem(\"user\"));\n  return user?.token ? { Authorization: `Bearer ${user.token}` } : {};\n};","import React, { useState } from \"react\";\nimport InputField from \"../../../shared/components/InputField\";\nimport Button from \"../../../shared/components/Button\";\nimport * as authService from \"../service/authService\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n\n  const navigate = useNavigate();\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n        setError(\"\");\n\n    try {\n      const user = await authService.login({ email, password });\n      console.log(\"Logged in user:\", user);\n\n      navigate(\"/dashboard\");\n    } catch (err) {\n      console.error(err.response?.data || err.message);\n      setError(err.response?.data?.message || \"Login failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-purple-900 bg-opacity-90\">\n      <div className=\"w-full max-w-md p-8 rounded-xl shadow-lg text-white bg-gradient-to-r from-purple-700 to-purple-900\">\n        <h1 className=\"text-3xl font-bold text-center mb-6 text-red-500\">RubyStake Wallet</h1>\n        <h2 className=\"text-xl font-semibold text-center mb-6\">Hi, Welcome Back</h2>\n        <p className=\"text-center text-gray-300 mb-6\">Enter your credentials to continue</p>\n\n        <form onSubmit={onSubmit} className=\"space-y-4\">\n          <InputField\n            label=\"User Email\"\n            name=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter user email\"\n            className=\"w-full p-2 rounded bg-gray-700 text-white border-none focus:outline-none\"\n          />\n          <InputField\n            label=\"Password\"\n            name=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"Password\"\n            className=\"w-full p-2 rounded bg-gray-700 text-white border-none focus:outline-none\"\n          />\n\n    \n        {error && (\n          <p className=\"text-red-500 bg-white-100 text-xs\">{error}</p>\n        )}\n\n\n          <div className=\"flex justify-end\">\n            <a href=\"/auth/forgot-password\" className=\"text-sm text-pink-400 hover:underline\">\n              Forgot Password?\n            </a>\n          </div>\n\n          <Button\n            type=\"submit\"\n            disabled={loading}\n            className=\"w-full bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white p-3 rounded\"\n          >\n            {loading ? \"Signing in...\" : \"Log In\"}\n          </Button>\n\n          <p className=\"text-center mt-4 text-gray-400\">\n            Don't have a wallet?{\" \"}\n            <a href=\"/auth/register\" className=\"text-blue-400 underline\">\n              Register\n            </a>\n          </p>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"names":["API_URL","process","login","async","response","axios","post","concat","userData","data","token","sessionStorage","setItem","JSON","stringify","Login","email","setEmail","useState","password","setPassword","loading","setLoading","error","setError","navigate","useNavigate","_jsx","className","children","_jsxs","onSubmit","e","preventDefault","user","authService","console","log","err","_err$response","_err$response2","_err$response2$data","message","InputField","label","name","type","value","onChange","target","placeholder","href","Button","disabled"],"sourceRoot":""}